import javax.swing.*;
import java.util.ArrayList;

class Jogador {
    private String nome;
    private int votos;

    public Jogador(String nome) {
        this.nome = nome;
        this.votos = 0;
    }

    public String getNome() {
        return nome;
    }

    public int getVotos() {
        return votos;
    }

    public void incrementaUmVoto() {
        this.votos = getVotos() + 1;
    }
}


import javax.swing.*;
import java.util.ArrayList;

public class BBB {
    public static void main(String[] args) {
        ArrayList<Jogador> participantes = cadastrarParticipantes();
        contabilizarVotos(participantes);
        apurarVotos(participantes);
    }

    private static ArrayList<Jogador> cadastrarParticipantes() {
        String[] nomes = {"Alane Dias", "Beatriz Reis", "Davi Brito", "Deniziane Ferreira", "Fernanda Bande", "Giovanna Lima",
                "Giovanna Pitel", "Isabelle Nogueira", "Juninho", "Leidy Elin", "Lucas Henrique", "Lucas Luigi", "Lucas Pizane",
                "Marcus Vinicius", "Matteus Amaral", "Maycon Cosmer", "MC Bin Laden", "Michel Nogueira", "Nizam", "Raquele Cardozo",
                "Rodriguinho", "Thalyta Alves", "Vanessa Lopes", "Vinicius Rodrigues", "Wanessa Camargo", "Yasmin Brunet"};

        ArrayList<Jogador> participantes = new ArrayList<>();
        for (String nome : nomes) {
            participantes.add(new Jogador(nome));
        }
        return participantes;
    }


    private static void contabilizarVotos(ArrayList<Jogador> participantes) {
        String voto;
        while (true) {
            voto = JOptionPane.showInputDialog(null, "Em quem você vota para sair da casa? " +
                    "(Digite 'sair' para encerrar os votos)");
            if (voto.equalsIgnoreCase("sair")) {
                break;
            }
            boolean jogadorEncontrado = false;
            for (Jogador jogador : participantes) {
                if (jogador.getNome().equalsIgnoreCase(voto)) {
                    jogador.incrementaUmVoto();
                    jogadorEncontrado = true;
                    break;
                }
            }
            if (!jogadorEncontrado) {
                JOptionPane.showMessageDialog(null, "Participante não encontrado!");
            }
        }
    }

    private static void apurarVotos(ArrayList<Jogador> participantes) {
        Jogador eliminado = participantes.get(0);
        for (Jogador jogador : participantes) {
            if (jogador.getVotos() > eliminado.getVotos()) {
                eliminado = jogador;
            }
        }
        JOptionPane.showMessageDialog(null, "Se eu conseguir mover montanhas, se eu conseguir surfar um tsunami, " +
                "se eu conseguir domar o sol, se eu conseguir fazer o mar virar sertão,\n e o sertão " +
                "virar mar, se eu conseguir dizer o que eu nunca vou conseguir dizer, aí terá chegado " +
                "o dia em que eu vou conseguir te eliminar com alegria.\n Com " + eliminado.getVotos() +
                " votos, é você quem sai " + eliminado.getNome());
    }
}
